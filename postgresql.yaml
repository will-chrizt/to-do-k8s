# postgresql.yaml

# 1. Headless Service for PostgreSQL
# This service provides a stable network identity for the StatefulSet pods.
# clusterIP: None makes it a headless service, allowing direct DNS resolution to pods.
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service # This name will be used in your DATABASE_URL
  labels:
    app: postgresql
spec:
  ports:
    - port: 5432       # Standard PostgreSQL port
      name: postgresql
  selector:
    app: postgresql
  clusterIP: None # Essential for StatefulSets for stable DNS
---
# 2. PostgreSQL StatefulSet
# Manages a single, stable PostgreSQL instance with persistent storage.
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql-statefulset # Name of your database deployment
  labels:
    app: postgresql
spec:
  serviceName: "postgresql-service" # Must match the headless Service name above
  replicas: 1 # For a single database instance
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:13 # Using a stable PostgreSQL image. You can specify a different version.
          ports:
            - containerPort: 5432
              name: postgresql
          env:
            # Environment variables for PostgreSQL.
            # IMPORTANT: For production, store these in a Kubernetes Secret!
            - name: POSTGRES_DB
              value: "todo_db" # The database name your Flask app will connect to
            - name: POSTGRES_USER
              value: "todo_user" # The database username
            - name: POSTGRES_PASSWORD
              value: "your_secure_password" # <--- REPLACE WITH A STRONG PASSWORD!
          volumeMounts:
            # Mounts the persistent volume to the PostgreSQL data directory.
            - name: postgres-persistent-storage
              mountPath: /var/lib/postgresql/data # Default path where Postgres stores data
  volumeClaimTemplates: # Defines a PersistentVolumeClaim for the StatefulSet
    - metadata:
        name: postgres-persistent-storage
      spec:
        accessModes: ["ReadWriteOnce"] # Allows a single node to mount the volume as read/write
        storageClassName: "standard" # Use your cluster's default StorageClass.
                                     # Run 'kubectl get storageclass' to see available ones.
        resources:
          requests:
            storage: 1Gi # Request 1 Gigabyte of storage. Adjust based on your data needs.
